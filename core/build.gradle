import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'java'
    id 'idea'
    id 'com.google.protobuf' version "${protoBufPluginVersion}"
    //The bootJar task tries to create an executable jar, and that requires a main() method.
    // As a result, you need to disable it by disabling the the Spring Boot plugin, while keeping it
    // for its dependency management features.
    id 'org.springframework.boot' version "${springBootPluginVersion}" apply false
    id 'io.spring.dependency-management' version "${springDepMgmtVersion}"
}

jar {
    archiveVersion = '1.0.0'
    archivesBaseName = 'smart-circuit-breaker'
    manifest {
        attributes("Implementation-Title": archivesBaseName,
                "Implementation-Version": archiveVersion)
    }
}

dependencies {

//    implementation project(':common')

    // necessary for Java 9+
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53'

    // for the bloom filter
    implementation 'com.google.guava:guava:32.1.2-jre'
    implementation 'org.reflections:reflections:0.10.2'

    // for exponential backoff
    implementation 'com.google.http-client:google-http-client:1.43.3'
    implementation 'io.github.resilience4j:resilience4j-retry:2.1.0'
    //implementation 'io.github.resilience4j:resilience4j-core:2.1.0'
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    implementation "io.grpc:grpc-netty-shaded:${protoBufVersion}"
    implementation "io.grpc:grpc-protobuf:${protoBufVersion}"
    implementation "io.grpc:grpc-stub:${protoBufVersion}"

    // spring boot
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus:1.11.5'

    // custom spring boot starter for grpc - https://github.com/yidongnan/grpc-spring-boot-starter
    implementation "net.devh:grpc-spring-boot-starter:${grpcSpringBootStarter}"

    implementation 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    // spring boot additional libraries
//    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

/*configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    }
}*/

test {
    useJUnitPlatform()
}


// Reference : https://spring.io/guides/gs/multi-module/
dependencyManagement {
    imports {
        mavenBom SpringBootPlugin.BOM_COORDINATES
    }
}

protobuf {
    // The protoc executable.
    protoc {
        artifact = "com.google.protobuf:protoc:3.22.3"
    }
    // grpc plugin
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${protoBufVersion}"
        }
    }
    // generates the code everytime we run the build.
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}